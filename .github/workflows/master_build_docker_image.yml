name: Master-Build-Docker-Images
#on:
#  push:
#    # 每次 push tag 时进行构建，不需要每次 push 都构建。使用通配符匹配每次 tag 的提交，记得 tag 名一定要以 v 开头
#    tags:
#      - v*
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  push:
    # 如果需要在构建前进行测试的话需要取消下面的注释和上面对应的 test 动作的注释。
    # needs: test
    #系统镜像选择
    runs-on: ubuntu-latest
    steps:
      - name: 环境配置
      - uses: actions/checkout@v2
      - name: go环境配置
      - uses: actions/setup-go@v3.0.0
        with:
           go-version: true
      - name: Build and publish Docker Image to GitHub Packages Registry
        uses: ckmuun/gp-docker-action@0.0.3
        with:
          github-token: ${{ secrets.TOKEN }}
          image-name: fl_backend_learning_wall
          extract-git-tag: true
          dockerfile: Dockerfile
          build-context: .
          pull-image: false
          build-folder: .
#       - name: 登录github
#         run: |
#           echo '=====登录Github====='
#           echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u FriendshipLodge --password-stdin
      - name: Build And Push Docker Image
        run: |
#           echo '=====构建镜像====='
#           docker build -t ghcr.io/OWNER/REPOSITORY(可不写)/IMAGE_NAME:VERSION .
#           echo '=====构建镜像完成====='
           echo '=====开始上传镜像====='
           docker push ghcr.io/FriendshipLodge/$IMAGE_NAME:$TAG_NAME
           echo '=====镜像上传结束====='
        env:
           IMAGE_NAME: "fl_backend_learning_wall"
           TAG_NAME: "latest"